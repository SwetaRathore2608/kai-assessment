(base) swetarathore@Swetas-MacBook-Air iac % terraform fmt
(base) swetarathore@Swetas-MacBook-Air iac %
(base) swetarathore@Swetas-MacBook-Air iac %
(base) swetarathore@Swetas-MacBook-Air iac % terraform init

Initializing the backend...
Initializing modules...

Initializing provider plugins...
- Reusing previous version of hashicorp/random from the dependency lock file
- Reusing previous version of hashicorp/azurerm from the dependency lock file
- Using previously-installed hashicorp/random v3.6.3
- Using previously-installed hashicorp/azurerm v4.18.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
(base) swetarathore@Swetas-MacBook-Air iac %
(base) swetarathore@Swetas-MacBook-Air iac %
(base) swetarathore@Swetas-MacBook-Air iac %
(base) swetarathore@Swetas-MacBook-Air iac % terraform validate
Success! The configuration is valid.

(base) swetarathore@Swetas-MacBook-Air iac %
(base) swetarathore@Swetas-MacBook-Air iac %
(base) swetarathore@Swetas-MacBook-Air iac %
(base) swetarathore@Swetas-MacBook-Air iac % terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "westus"
      + name     = "kai-assessment-group"
      + tags     = {
          + "environment" = "dev"
          + "source"      = "Terraform"
        }
    }

  # random_pet.prefix will be created
  + resource "random_pet" "prefix" {
      + id        = (known after apply)
      + length    = 1
      + prefix    = "rg"
      + separator = "-"
    }

  # module.aks.azurerm_kubernetes_cluster.aks will be created
  + resource "azurerm_kubernetes_cluster" "aks" {
      + current_kubernetes_version          = (known after apply)
      + dns_prefix                          = "aksdns"
      + fqdn                                = (known after apply)
      + http_application_routing_zone_name  = (known after apply)
      + id                                  = (known after apply)
      + kube_admin_config                   = (sensitive value)
      + kube_admin_config_raw               = (sensitive value)
      + kube_config                         = (sensitive value)
      + kube_config_raw                     = (sensitive value)
      + kubernetes_version                  = (known after apply)
      + location                            = "westus"
      + name                                = (known after apply)
      + node_os_upgrade_channel             = "NodeImage"
      + node_resource_group                 = (known after apply)
      + node_resource_group_id              = (known after apply)
      + oidc_issuer_url                     = (known after apply)
      + portal_fqdn                         = (known after apply)
      + private_cluster_enabled             = false
      + private_cluster_public_fqdn_enabled = false
      + private_dns_zone_id                 = (known after apply)
      + private_fqdn                        = (known after apply)
      + resource_group_name                 = "kai-assessment-group"
      + role_based_access_control_enabled   = true
      + run_command_enabled                 = true
      + sku_tier                            = "Free"
      + support_plan                        = "KubernetesOfficial"
      + workload_identity_enabled           = false

      + default_node_pool {
          + kubelet_disk_type    = (known after apply)
          + max_pods             = (known after apply)
          + name                 = "default"
          + node_count           = 1
          + node_labels          = (known after apply)
          + orchestrator_version = (known after apply)
          + os_disk_size_gb      = (known after apply)
          + os_disk_type         = "Managed"
          + os_sku               = (known after apply)
          + scale_down_mode      = "Delete"
          + type                 = "VirtualMachineScaleSets"
          + ultra_ssd_enabled    = false
          + vm_size              = "Standard_DS2_v2"
          + vnet_subnet_id       = (known after apply)
          + workload_runtime     = (known after apply)
        }

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + network_profile {
          + dns_service_ip     = "10.1.0.10"
          + ip_versions        = (known after apply)
          + load_balancer_sku  = "standard"
          + network_data_plane = "azure"
          + network_mode       = (known after apply)
          + network_plugin     = "azure"
          + network_policy     = (known after apply)
          + outbound_type      = "loadBalancer"
          + pod_cidr           = (known after apply)
          + pod_cidrs          = (known after apply)
          + service_cidr       = "10.1.0.0/16"
          + service_cidrs      = (known after apply)
        }
    }

  # module.database.azurerm_postgresql_flexible_server.db will be created
  + resource "azurerm_postgresql_flexible_server" "db" {
      + administrator_login           = "adminuser"
      + administrator_password        = (sensitive value)
      + auto_grow_enabled             = false
      + backup_retention_days         = 14
      + fqdn                          = (known after apply)
      + geo_redundant_backup_enabled  = false
      + id                            = (known after apply)
      + location                      = "westus"
      + name                          = (known after apply)
      + private_dns_zone_id           = (known after apply)
      + public_network_access_enabled = true
      + resource_group_name           = "kai-assessment-group"
      + sku_name                      = "GP_Standard_D2s_v3"
      + storage_mb                    = 32768
      + storage_tier                  = (known after apply)
      + version                       = (known after apply)
    }

  # module.storage.azurerm_storage_account.storage will be created
  + resource "azurerm_storage_account" "storage" {
      + access_tier                        = (known after apply)
      + account_kind                       = "StorageV2"
      + account_replication_type           = "LRS"
      + account_tier                       = "Standard"
      + allow_nested_items_to_be_public    = true
      + cross_tenant_replication_enabled   = false
      + default_to_oauth_authentication    = false
      + dns_endpoint_type                  = "Standard"
      + https_traffic_only_enabled         = true
      + id                                 = (known after apply)
      + infrastructure_encryption_enabled  = false
      + is_hns_enabled                     = false
      + large_file_share_enabled           = (known after apply)
      + local_user_enabled                 = true
      + location                           = "westus"
      + min_tls_version                    = "TLS1_2"
      + name                               = "mystorage"
      + nfsv3_enabled                      = false
      + primary_access_key                 = (sensitive value)
      + primary_blob_connection_string     = (sensitive value)
      + primary_blob_endpoint              = (known after apply)
      + primary_blob_host                  = (known after apply)
      + primary_blob_internet_endpoint     = (known after apply)
      + primary_blob_internet_host         = (known after apply)
      + primary_blob_microsoft_endpoint    = (known after apply)
      + primary_blob_microsoft_host        = (known after apply)
      + primary_connection_string          = (sensitive value)
      + primary_dfs_endpoint               = (known after apply)
      + primary_dfs_host                   = (known after apply)
      + primary_dfs_internet_endpoint      = (known after apply)
      + primary_dfs_internet_host          = (known after apply)
      + primary_dfs_microsoft_endpoint     = (known after apply)
      + primary_dfs_microsoft_host         = (known after apply)
      + primary_file_endpoint              = (known after apply)
      + primary_file_host                  = (known after apply)
      + primary_file_internet_endpoint     = (known after apply)
      + primary_file_internet_host         = (known after apply)
      + primary_file_microsoft_endpoint    = (known after apply)
      + primary_file_microsoft_host        = (known after apply)
      + primary_location                   = (known after apply)
      + primary_queue_endpoint             = (known after apply)
      + primary_queue_host                 = (known after apply)
      + primary_queue_microsoft_endpoint   = (known after apply)
      + primary_queue_microsoft_host       = (known after apply)
      + primary_table_endpoint             = (known after apply)
      + primary_table_host                 = (known after apply)
      + primary_table_microsoft_endpoint   = (known after apply)
      + primary_table_microsoft_host       = (known after apply)
      + primary_web_endpoint               = (known after apply)
      + primary_web_host                   = (known after apply)
      + primary_web_internet_endpoint      = (known after apply)
      + primary_web_internet_host          = (known after apply)
      + primary_web_microsoft_endpoint     = (known after apply)
      + primary_web_microsoft_host         = (known after apply)
      + public_network_access_enabled      = true
      + queue_encryption_key_type          = "Service"
      + resource_group_name                = "kai-assessment-group"
      + secondary_access_key               = (sensitive value)
      + secondary_blob_connection_string   = (sensitive value)
      + secondary_blob_endpoint            = (known after apply)
      + secondary_blob_host                = (known after apply)
      + secondary_blob_internet_endpoint   = (known after apply)
      + secondary_blob_internet_host       = (known after apply)
      + secondary_blob_microsoft_endpoint  = (known after apply)
      + secondary_blob_microsoft_host      = (known after apply)
      + secondary_connection_string        = (sensitive value)
      + secondary_dfs_endpoint             = (known after apply)
      + secondary_dfs_host                 = (known after apply)
      + secondary_dfs_internet_endpoint    = (known after apply)
      + secondary_dfs_internet_host        = (known after apply)
      + secondary_dfs_microsoft_endpoint   = (known after apply)
      + secondary_dfs_microsoft_host       = (known after apply)
      + secondary_file_endpoint            = (known after apply)
      + secondary_file_host                = (known after apply)
      + secondary_file_internet_endpoint   = (known after apply)
      + secondary_file_internet_host       = (known after apply)
      + secondary_file_microsoft_endpoint  = (known after apply)
      + secondary_file_microsoft_host      = (known after apply)
      + secondary_location                 = (known after apply)
      + secondary_queue_endpoint           = (known after apply)
      + secondary_queue_host               = (known after apply)
      + secondary_queue_microsoft_endpoint = (known after apply)
      + secondary_queue_microsoft_host     = (known after apply)
      + secondary_table_endpoint           = (known after apply)
      + secondary_table_host               = (known after apply)
      + secondary_table_microsoft_endpoint = (known after apply)
      + secondary_table_microsoft_host     = (known after apply)
      + secondary_web_endpoint             = (known after apply)
      + secondary_web_host                 = (known after apply)
      + secondary_web_internet_endpoint    = (known after apply)
      + secondary_web_internet_host        = (known after apply)
      + secondary_web_microsoft_endpoint   = (known after apply)
      + secondary_web_microsoft_host       = (known after apply)
      + sftp_enabled                       = false
      + shared_access_key_enabled          = true
      + table_encryption_key_type          = "Service"
    }

  # module.vnet.azurerm_nat_gateway.nat will be created
  + resource "azurerm_nat_gateway" "nat" {
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + location                = "westus"
      + name                    = "nat-gateway"
      + resource_group_name     = "kai-assessment-group"
      + resource_guid           = (known after apply)
      + sku_name                = "Standard"
    }

  # module.vnet.azurerm_nat_gateway_public_ip_association.nat_gateway_pip_association will be created
  + resource "azurerm_nat_gateway_public_ip_association" "nat_gateway_pip_association" {
      + id                   = (known after apply)
      + nat_gateway_id       = (known after apply)
      + public_ip_address_id = (known after apply)
    }

  # module.vnet.azurerm_network_security_group.nsg will be created
  + resource "azurerm_network_security_group" "nsg" {
      + id                  = (known after apply)
      + location            = "westus"
      + name                = "nsg"
      + resource_group_name = "kai-assessment-group"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "Allow-SSH-Inbound"
              + priority                                   = 110
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "0.0.0.0/0"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "80"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "Allow-HTTP-Inbound"
              + priority                                   = 100
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "0.0.0.0/0"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "Internet"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "*"
              + destination_port_ranges                    = []
              + direction                                  = "Outbound"
              + name                                       = "Allow-Internet-Outbound"
              + priority                                   = 100
              + protocol                                   = "*"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
    }

  # module.vnet.azurerm_public_ip.publicNAT will be created
  + resource "azurerm_public_ip" "publicNAT" {
      + allocation_method       = "Static"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "westus"
      + name                    = "public-ip"
      + resource_group_name     = "kai-assessment-group"
      + sku                     = "Standard"
      + sku_tier                = "Regional"
    }

  # module.vnet.azurerm_subnet.private will be created
  + resource "azurerm_subnet" "private" {
      + address_prefixes                              = [
          + "10.0.0.0/24",
        ]
      + default_outbound_access_enabled               = true
      + id                                            = (known after apply)
      + name                                          = "private-subnet"
      + private_endpoint_network_policies             = "Disabled"
      + private_link_service_network_policies_enabled = true
      + resource_group_name                           = "kai-assessment-group"
      + virtual_network_name                          = (known after apply)
    }

  # module.vnet.azurerm_subnet.public will be created
  + resource "azurerm_subnet" "public" {
      + address_prefixes                              = [
          + "10.0.1.0/24",
        ]
      + default_outbound_access_enabled               = true
      + id                                            = (known after apply)
      + name                                          = "public-subnet"
      + private_endpoint_network_policies             = "Disabled"
      + private_link_service_network_policies_enabled = true
      + resource_group_name                           = "kai-assessment-group"
      + virtual_network_name                          = (known after apply)
    }

  # module.vnet.azurerm_subnet_nat_gateway_association.subnet_nat_association will be created
  + resource "azurerm_subnet_nat_gateway_association" "subnet_nat_association" {
      + id             = (known after apply)
      + nat_gateway_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vnet.azurerm_subnet_network_security_group_association.subnet_nsg_association will be created
  + resource "azurerm_subnet_network_security_group_association" "subnet_nsg_association" {
      + id                        = (known after apply)
      + network_security_group_id = (known after apply)
      + subnet_id                 = (known after apply)
    }

  # module.vnet.azurerm_virtual_network.vnet will be created
  + resource "azurerm_virtual_network" "vnet" {
      + address_space                  = [
          + "10.0.0.0/16",
        ]
      + dns_servers                    = (known after apply)
      + guid                           = (known after apply)
      + id                             = (known after apply)
      + location                       = "westus"
      + name                           = (known after apply)
      + private_endpoint_vnet_policies = "Disabled"
      + resource_group_name            = "kai-assessment-group"
      + subnet                         = (known after apply)
    }

Plan: 14 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_group_name = "kai-assessment-group"

──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.
(base) swetarathore@Swetas-MacBook-Air iac %
(base) swetarathore@Swetas-MacBook-Air iac %
(base) swetarathore@Swetas-MacBook-Air iac % terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "westus"
      + name     = "kai-assessment-group"
      + tags     = {
          + "environment" = "dev"
          + "source"      = "Terraform"
        }
    }

  # random_pet.prefix will be created
  + resource "random_pet" "prefix" {
      + id        = (known after apply)
      + length    = 1
      + prefix    = "rg"
      + separator = "-"
    }

  # module.aks.azurerm_kubernetes_cluster.aks will be created
  + resource "azurerm_kubernetes_cluster" "aks" {
      + current_kubernetes_version          = (known after apply)
      + dns_prefix                          = "aksdns"
      + fqdn                                = (known after apply)
      + http_application_routing_zone_name  = (known after apply)
      + id                                  = (known after apply)
      + kube_admin_config                   = (sensitive value)
      + kube_admin_config_raw               = (sensitive value)
      + kube_config                         = (sensitive value)
      + kube_config_raw                     = (sensitive value)
      + kubernetes_version                  = (known after apply)
      + location                            = "westus"
      + name                                = (known after apply)
      + node_os_upgrade_channel             = "NodeImage"
      + node_resource_group                 = (known after apply)
      + node_resource_group_id              = (known after apply)
      + oidc_issuer_url                     = (known after apply)
      + portal_fqdn                         = (known after apply)
      + private_cluster_enabled             = false
      + private_cluster_public_fqdn_enabled = false
      + private_dns_zone_id                 = (known after apply)
      + private_fqdn                        = (known after apply)
      + resource_group_name                 = "kai-assessment-group"
      + role_based_access_control_enabled   = true
      + run_command_enabled                 = true
      + sku_tier                            = "Free"
      + support_plan                        = "KubernetesOfficial"
      + workload_identity_enabled           = false

      + default_node_pool {
          + kubelet_disk_type    = (known after apply)
          + max_pods             = (known after apply)
          + name                 = "default"
          + node_count           = 1
          + node_labels          = (known after apply)
          + orchestrator_version = (known after apply)
          + os_disk_size_gb      = (known after apply)
          + os_disk_type         = "Managed"
          + os_sku               = (known after apply)
          + scale_down_mode      = "Delete"
          + type                 = "VirtualMachineScaleSets"
          + ultra_ssd_enabled    = false
          + vm_size              = "Standard_DS2_v2"
          + vnet_subnet_id       = (known after apply)
          + workload_runtime     = (known after apply)
        }

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + network_profile {
          + dns_service_ip     = "10.1.0.10"
          + ip_versions        = (known after apply)
          + load_balancer_sku  = "standard"
          + network_data_plane = "azure"
          + network_mode       = (known after apply)
          + network_plugin     = "azure"
          + network_policy     = (known after apply)
          + outbound_type      = "loadBalancer"
          + pod_cidr           = (known after apply)
          + pod_cidrs          = (known after apply)
          + service_cidr       = "10.1.0.0/16"
          + service_cidrs      = (known after apply)
        }
    }

  # module.database.azurerm_postgresql_flexible_server.db will be created
  + resource "azurerm_postgresql_flexible_server" "db" {
      + administrator_login           = "adminuser"
      + administrator_password        = (sensitive value)
      + auto_grow_enabled             = false
      + backup_retention_days         = 14
      + fqdn                          = (known after apply)
      + geo_redundant_backup_enabled  = false
      + id                            = (known after apply)
      + location                      = "westus"
      + name                          = (known after apply)
      + private_dns_zone_id           = (known after apply)
      + public_network_access_enabled = true
      + resource_group_name           = "kai-assessment-group"
      + sku_name                      = "GP_Standard_D2s_v3"
      + storage_mb                    = 32768
      + storage_tier                  = (known after apply)
      + version                       = "14"
    }

  # module.storage.azurerm_storage_account.storage will be created
  + resource "azurerm_storage_account" "storage" {
      + access_tier                        = (known after apply)
      + account_kind                       = "StorageV2"
      + account_replication_type           = "LRS"
      + account_tier                       = "Standard"
      + allow_nested_items_to_be_public    = true
      + cross_tenant_replication_enabled   = false
      + default_to_oauth_authentication    = false
      + dns_endpoint_type                  = "Standard"
      + https_traffic_only_enabled         = true
      + id                                 = (known after apply)
      + infrastructure_encryption_enabled  = false
      + is_hns_enabled                     = false
      + large_file_share_enabled           = (known after apply)
      + local_user_enabled                 = true
      + location                           = "westus"
      + min_tls_version                    = "TLS1_2"
      + name                               = "myassessmentstorage"
      + nfsv3_enabled                      = false
      + primary_access_key                 = (sensitive value)
      + primary_blob_connection_string     = (sensitive value)
      + primary_blob_endpoint              = (known after apply)
      + primary_blob_host                  = (known after apply)
      + primary_blob_internet_endpoint     = (known after apply)
      + primary_blob_internet_host         = (known after apply)
      + primary_blob_microsoft_endpoint    = (known after apply)
      + primary_blob_microsoft_host        = (known after apply)
      + primary_connection_string          = (sensitive value)
      + primary_dfs_endpoint               = (known after apply)
      + primary_dfs_host                   = (known after apply)
      + primary_dfs_internet_endpoint      = (known after apply)
      + primary_dfs_internet_host          = (known after apply)
      + primary_dfs_microsoft_endpoint     = (known after apply)
      + primary_dfs_microsoft_host         = (known after apply)
      + primary_file_endpoint              = (known after apply)
      + primary_file_host                  = (known after apply)
      + primary_file_internet_endpoint     = (known after apply)
      + primary_file_internet_host         = (known after apply)
      + primary_file_microsoft_endpoint    = (known after apply)
      + primary_file_microsoft_host        = (known after apply)
      + primary_location                   = (known after apply)
      + primary_queue_endpoint             = (known after apply)
      + primary_queue_host                 = (known after apply)
      + primary_queue_microsoft_endpoint   = (known after apply)
      + primary_queue_microsoft_host       = (known after apply)
      + primary_table_endpoint             = (known after apply)
      + primary_table_host                 = (known after apply)
      + primary_table_microsoft_endpoint   = (known after apply)
      + primary_table_microsoft_host       = (known after apply)
      + primary_web_endpoint               = (known after apply)
      + primary_web_host                   = (known after apply)
      + primary_web_internet_endpoint      = (known after apply)
      + primary_web_internet_host          = (known after apply)
      + primary_web_microsoft_endpoint     = (known after apply)
      + primary_web_microsoft_host         = (known after apply)
      + public_network_access_enabled      = true
      + queue_encryption_key_type          = "Service"
      + resource_group_name                = "kai-assessment-group"
      + secondary_access_key               = (sensitive value)
      + secondary_blob_connection_string   = (sensitive value)
      + secondary_blob_endpoint            = (known after apply)
      + secondary_blob_host                = (known after apply)
      + secondary_blob_internet_endpoint   = (known after apply)
      + secondary_blob_internet_host       = (known after apply)
      + secondary_blob_microsoft_endpoint  = (known after apply)
      + secondary_blob_microsoft_host      = (known after apply)
      + secondary_connection_string        = (sensitive value)
      + secondary_dfs_endpoint             = (known after apply)
      + secondary_dfs_host                 = (known after apply)
      + secondary_dfs_internet_endpoint    = (known after apply)
      + secondary_dfs_internet_host        = (known after apply)
      + secondary_dfs_microsoft_endpoint   = (known after apply)
      + secondary_dfs_microsoft_host       = (known after apply)
      + secondary_file_endpoint            = (known after apply)
      + secondary_file_host                = (known after apply)
      + secondary_file_internet_endpoint   = (known after apply)
      + secondary_file_internet_host       = (known after apply)
      + secondary_file_microsoft_endpoint  = (known after apply)
      + secondary_file_microsoft_host      = (known after apply)
      + secondary_location                 = (known after apply)
      + secondary_queue_endpoint           = (known after apply)
      + secondary_queue_host               = (known after apply)
      + secondary_queue_microsoft_endpoint = (known after apply)
      + secondary_queue_microsoft_host     = (known after apply)
      + secondary_table_endpoint           = (known after apply)
      + secondary_table_host               = (known after apply)
      + secondary_table_microsoft_endpoint = (known after apply)
      + secondary_table_microsoft_host     = (known after apply)
      + secondary_web_endpoint             = (known after apply)
      + secondary_web_host                 = (known after apply)
      + secondary_web_internet_endpoint    = (known after apply)
      + secondary_web_internet_host        = (known after apply)
      + secondary_web_microsoft_endpoint   = (known after apply)
      + secondary_web_microsoft_host       = (known after apply)
      + sftp_enabled                       = false
      + shared_access_key_enabled          = true
      + table_encryption_key_type          = "Service"
    }

  # module.vnet.azurerm_nat_gateway.nat will be created
  + resource "azurerm_nat_gateway" "nat" {
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + location                = "westus"
      + name                    = "nat-gateway"
      + resource_group_name     = "kai-assessment-group"
      + resource_guid           = (known after apply)
      + sku_name                = "Standard"
    }

  # module.vnet.azurerm_nat_gateway_public_ip_association.nat_gateway_pip_association will be created
  + resource "azurerm_nat_gateway_public_ip_association" "nat_gateway_pip_association" {
      + id                   = (known after apply)
      + nat_gateway_id       = (known after apply)
      + public_ip_address_id = (known after apply)
    }

  # module.vnet.azurerm_network_security_group.nsg will be created
  + resource "azurerm_network_security_group" "nsg" {
      + id                  = (known after apply)
      + location            = "westus"
      + name                = "nsg"
      + resource_group_name = "kai-assessment-group"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "Allow-SSH-Inbound"
              + priority                                   = 110
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "0.0.0.0/0"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "80"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "Allow-HTTP-Inbound"
              + priority                                   = 100
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "0.0.0.0/0"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "Internet"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "*"
              + destination_port_ranges                    = []
              + direction                                  = "Outbound"
              + name                                       = "Allow-Internet-Outbound"
              + priority                                   = 100
              + protocol                                   = "*"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
    }

  # module.vnet.azurerm_public_ip.publicNAT will be created
  + resource "azurerm_public_ip" "publicNAT" {
      + allocation_method       = "Static"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "westus"
      + name                    = "public-ip"
      + resource_group_name     = "kai-assessment-group"
      + sku                     = "Standard"
      + sku_tier                = "Regional"
    }

  # module.vnet.azurerm_subnet.private will be created
  + resource "azurerm_subnet" "private" {
      + address_prefixes                              = [
          + "10.0.0.0/24",
        ]
      + default_outbound_access_enabled               = true
      + id                                            = (known after apply)
      + name                                          = "private-subnet"
      + private_endpoint_network_policies             = "Disabled"
      + private_link_service_network_policies_enabled = true
      + resource_group_name                           = "kai-assessment-group"
      + virtual_network_name                          = (known after apply)
    }

  # module.vnet.azurerm_subnet.public will be created
  + resource "azurerm_subnet" "public" {
      + address_prefixes                              = [
          + "10.0.1.0/24",
        ]
      + default_outbound_access_enabled               = true
      + id                                            = (known after apply)
      + name                                          = "public-subnet"
      + private_endpoint_network_policies             = "Disabled"
      + private_link_service_network_policies_enabled = true
      + resource_group_name                           = "kai-assessment-group"
      + virtual_network_name                          = (known after apply)
    }

  # module.vnet.azurerm_subnet_nat_gateway_association.subnet_nat_association will be created
  + resource "azurerm_subnet_nat_gateway_association" "subnet_nat_association" {
      + id             = (known after apply)
      + nat_gateway_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vnet.azurerm_subnet_network_security_group_association.subnet_nsg_association will be created
  + resource "azurerm_subnet_network_security_group_association" "subnet_nsg_association" {
      + id                        = (known after apply)
      + network_security_group_id = (known after apply)
      + subnet_id                 = (known after apply)
    }

  # module.vnet.azurerm_virtual_network.vnet will be created
  + resource "azurerm_virtual_network" "vnet" {
      + address_space                  = [
          + "10.0.0.0/16",
        ]
      + dns_servers                    = (known after apply)
      + guid                           = (known after apply)
      + id                             = (known after apply)
      + location                       = "westus"
      + name                           = (known after apply)
      + private_endpoint_vnet_policies = "Disabled"
      + resource_group_name            = "kai-assessment-group"
      + subnet                         = (known after apply)
    }

Plan: 14 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + resource_group_name = "kai-assessment-group"

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

random_pet.prefix: Creating...
random_pet.prefix: Creation complete after 0s [id=rg-gull]
azurerm_resource_group.rg: Creating...
azurerm_resource_group.rg: Still creating... [10s elapsed]
azurerm_resource_group.rg: Creation complete after 10s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group]
module.vnet.azurerm_nat_gateway.nat: Creating...
module.vnet.azurerm_public_ip.publicNAT: Creating...
module.database.azurerm_postgresql_flexible_server.db: Creating...
module.vnet.azurerm_virtual_network.vnet: Creating...
module.vnet.azurerm_network_security_group.nsg: Creating...
module.storage.azurerm_storage_account.storage: Creating...
module.vnet.azurerm_public_ip.publicNAT: Creation complete after 3s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.Network/publicIPAddresses/public-ip]
module.vnet.azurerm_network_security_group.nsg: Creation complete after 3s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.Network/networkSecurityGroups/nsg]
module.vnet.azurerm_virtual_network.vnet: Creation complete after 5s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.Network/virtualNetworks/rg-gull-vnet]
module.vnet.azurerm_subnet.private: Creating...
module.vnet.azurerm_subnet.public: Creating...
module.vnet.azurerm_subnet.private: Creation complete after 4s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.Network/virtualNetworks/rg-gull-vnet/subnets/private-subnet]
module.aks.azurerm_kubernetes_cluster.aks: Creating...
module.vnet.azurerm_nat_gateway.nat: Still creating... [10s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [10s elapsed]
module.storage.azurerm_storage_account.storage: Still creating... [10s elapsed]
module.vnet.azurerm_nat_gateway.nat: Creation complete after 12s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.Network/natGateways/nat-gateway]
module.vnet.azurerm_nat_gateway_public_ip_association.nat_gateway_pip_association: Creating...
module.vnet.azurerm_subnet.public: Creation complete after 8s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.Network/virtualNetworks/rg-gull-vnet/subnets/public-subnet]
module.vnet.azurerm_subnet_network_security_group_association.subnet_nsg_association: Creating...
module.vnet.azurerm_subnet_nat_gateway_association.subnet_nat_association: Creating...
module.vnet.azurerm_subnet_network_security_group_association.subnet_nsg_association: Creation complete after 4s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.Network/virtualNetworks/rg-gull-vnet/subnets/public-subnet]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [10s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [20s elapsed]
module.storage.azurerm_storage_account.storage: Still creating... [20s elapsed]
module.vnet.azurerm_nat_gateway_public_ip_association.nat_gateway_pip_association: Still creating... [10s elapsed]
module.vnet.azurerm_subnet_nat_gateway_association.subnet_nat_association: Still creating... [10s elapsed]
module.vnet.azurerm_nat_gateway_public_ip_association.nat_gateway_pip_association: Creation complete after 13s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.Network/natGateways/nat-gateway|/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.Network/publicIPAddresses/public-ip]
module.vnet.azurerm_subnet_nat_gateway_association.subnet_nat_association: Creation complete after 16s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.Network/virtualNetworks/rg-gull-vnet/subnets/public-subnet]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [20s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [30s elapsed]
module.storage.azurerm_storage_account.storage: Still creating... [30s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [30s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [40s elapsed]
module.storage.azurerm_storage_account.storage: Still creating... [40s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [40s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [50s elapsed]
module.storage.azurerm_storage_account.storage: Still creating... [50s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [50s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [1m0s elapsed]
module.storage.azurerm_storage_account.storage: Still creating... [1m0s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [1m0s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [1m10s elapsed]
module.storage.azurerm_storage_account.storage: Still creating... [1m10s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [1m10s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [1m20s elapsed]
module.storage.azurerm_storage_account.storage: Still creating... [1m20s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [1m20s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [1m30s elapsed]
module.storage.azurerm_storage_account.storage: Still creating... [1m30s elapsed]
module.storage.azurerm_storage_account.storage: Creation complete after 1m31s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.Storage/storageAccounts/myassessmentstorage]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [1m30s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [1m40s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [1m40s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [1m50s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [1m50s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [2m0s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [2m0s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [2m10s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [2m10s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [2m20s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [2m20s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [2m30s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [2m30s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [2m40s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [2m40s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [2m50s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [2m50s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [3m0s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [3m0s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [3m10s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [3m10s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [3m20s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Still creating... [3m20s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [3m30s elapsed]
module.aks.azurerm_kubernetes_cluster.aks: Creation complete after 3m22s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.ContainerService/managedClusters/rg-gull-aks]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [3m40s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [3m50s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [4m0s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [4m10s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [4m20s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [4m30s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [4m40s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [4m50s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [5m0s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [5m10s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [5m20s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [5m30s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [5m40s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [5m50s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Still creating... [6m0s elapsed]
module.database.azurerm_postgresql_flexible_server.db: Creation complete after 6m3s [id=/subscriptions/623c0eb4-cfc0-4f05-9ade-d65bdd2b6752/resourceGroups/kai-assessment-group/providers/Microsoft.DBforPostgreSQL/flexibleServers/rg-gull-db]

Apply complete! Resources: 14 added, 0 changed, 0 destroyed.

Outputs:

resource_group_name = "kai-assessment-group"